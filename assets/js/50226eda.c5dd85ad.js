"use strict";(globalThis.webpackChunkexpo_iap_docs=globalThis.webpackChunkexpo_iap_docs||[]).push([[1310],{4140:e=>{e.exports=JSON.parse('{"permalink":"/expo-iap/blog/3.1.9","editUrl":"https://github.com/hyochan/expo-iap/tree/main/docs/blog/2025-10-04-3.1.9.md","source":"@site/blog/2025-10-04-3.1.9.md","title":"3.1.9 - Alternative Billing Support","description":"Expo IAP 3.1.9 introduces Alternative Billing support for both iOS and Android platforms, enabling developers to offer external payment options in compliance with App Store and Google Play requirements.","date":"2025-10-04T00:00:00.000Z","tags":[{"inline":false,"label":"Release","permalink":"/expo-iap/blog/tags/release","description":"New version releases and updates"},{"inline":true,"label":"alternative-billing","permalink":"/expo-iap/blog/tags/alternative-billing"},{"inline":false,"label":"iOS","permalink":"/expo-iap/blog/tags/ios","description":"iOS platform specific features"},{"inline":false,"label":"Android","permalink":"/expo-iap/blog/tags/android","description":"Android platform specific features"},{"inline":true,"label":"storekit","permalink":"/expo-iap/blog/tags/storekit"}],"readingTime":4.6,"hasTruncateMarker":true,"authors":[{"name":"Hyo","title":"Expo IAP Maintainer","url":"https://github.com/hyochan","page":{"permalink":"/expo-iap/blog/authors/hyochan"},"socials":{"github":"https://github.com/hyochan","linkedin":"https://www.linkedin.com/in/hyochanjang/","x":"https://x.com/hyodotdev"},"imageURL":"https://github.com/hyochan.png","key":"hyochan"}],"frontMatter":{"slug":"3.1.9","title":"3.1.9 - Alternative Billing Support","authors":["hyochan"],"tags":["release","alternative-billing","ios","android","storekit"],"date":"2025-10-04T00:00:00.000Z"},"unlisted":false,"prevItem":{"title":"3.1.22 - Horizon OS Support","permalink":"/expo-iap/blog/3.1.22"},"nextItem":{"title":"3.1.0 - Full OpenIAP Ecosystem Adoption","permalink":"/expo-iap/blog/3.1.0"}}')},7238:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>l,toc:()=>d});var l=i(4140),r=i(4848),t=i(8453);const s={slug:"3.1.9",title:"3.1.9 - Alternative Billing Support",authors:["hyochan"],tags:["release","alternative-billing","ios","android","storekit"],date:new Date("2025-10-04T00:00:00.000Z")},o="3.1.9 Release Notes",a={authorsImageUrls:[void 0]},d=[{value:"\ud83d\ude80 Highlights",id:"-highlights",level:2},{value:"iOS Alternative Billing (StoreKit External Purchase)",id:"ios-alternative-billing-storekit-external-purchase",level:3},{value:"Android Alternative Billing",id:"android-alternative-billing",level:3},{value:"\ud83d\udcda Usage Examples",id:"-usage-examples",level:2},{value:"iOS External Purchase",id:"ios-external-purchase",level:3},{value:"Android Alternative Billing",id:"android-alternative-billing-1",level:3},{value:"\ud83c\udfa8 Example App",id:"-example-app",level:2},{value:"\ud83d\udd27 OpenIAP Upgrades",id:"-openiap-upgrades",level:2},{value:"\ud83e\uddea Testing",id:"-testing",level:2},{value:"\u26a0\ufe0f Platform Requirements",id:"\ufe0f-platform-requirements",level:2},{value:"iOS",id:"ios",level:3},{value:"Android",id:"android",level:3},{value:"\ud83d\udce6 Installation",id:"-installation",level:2},{value:"\ud83d\udea8 Important Notes",id:"-important-notes",level:2},{value:"For iOS Developers",id:"for-ios-developers",level:3},{value:"For Android Developers",id:"for-android-developers",level:3},{value:"\ud83d\udd17 References",id:"-references",level:2}];function c(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["Expo IAP 3.1.9 introduces ",(0,r.jsx)(n.strong,{children:"Alternative Billing"})," support for both iOS and Android platforms, enabling developers to offer external payment options in compliance with App Store and Google Play requirements."]}),"\n",(0,r.jsx)(n.p,{children:"This release integrates StoreKit External Purchase APIs (iOS 16.0+) and Google Play Alternative Billing APIs, providing a unified interface for alternative payment flows across platforms."}),"\n",(0,r.jsxs)(n.p,{children:["\ud83d\udc49 ",(0,r.jsx)(n.a,{href:"https://github.com/hyochan/expo-iap/releases/tag/3.1.9",children:"View the 3.1.9 release"})]}),"\n",(0,r.jsx)(n.h2,{id:"-highlights",children:"\ud83d\ude80 Highlights"}),"\n",(0,r.jsx)(n.h3,{id:"ios-alternative-billing-storekit-external-purchase",children:"iOS Alternative Billing (StoreKit External Purchase)"}),"\n",(0,r.jsx)(n.p,{children:"Three new APIs for managing external purchases on iOS:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/docs/api/methods/core-methods#canpresentexternalpurchasenoticeios",children:(0,r.jsx)(n.code,{children:"canPresentExternalPurchaseNoticeIOS()"})})})," - Check if the notice sheet is available (iOS 18.2+)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/docs/api/methods/core-methods#presentexternalpurchasenoticesheetios",children:(0,r.jsx)(n.code,{children:"presentExternalPurchaseNoticeSheetIOS()"})})})," - Present a notice before redirecting to external purchase (iOS 18.2+)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/docs/api/methods/core-methods#presentexternalpurchaselinkios",children:(0,r.jsx)(n.code,{children:"presentExternalPurchaseLinkIOS(url)"})})})," - Open external purchase link in Safari (iOS 16.0+)"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Expo Config Plugin Support"}),": The new ",(0,r.jsx)(n.code,{children:"iosAlternativeBilling"})," configuration automatically sets up required Info.plist keys and entitlements:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// app.config.ts\nexport default {\n  plugins: [\n    [\n      'expo-iap',\n      {\n        iosAlternativeBilling: {\n          countries: ['kr', 'nl'], // ISO 3166-1 alpha-2\n          links: {\n            kr: 'https://your-site.com/kr',\n            nl: 'https://your-site.com/nl',\n          },\n          enableExternalPurchaseLink: true,\n        },\n      },\n    ],\n  ],\n};\n"})}),"\n",(0,r.jsx)(n.p,{children:"The plugin handles:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"SKExternalPurchase"})," - Country codes where external purchases are supported"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"SKExternalPurchaseLink"})," - External purchase URLs per country (iOS 15.4+)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"SKExternalPurchaseMultiLink"})," - Multiple URLs per country (iOS 17.5+)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"SKExternalPurchaseCustomLinkRegions"})," - Custom link regions (iOS 18.1+)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"SKExternalPurchaseLinkStreamingRegions"})," - Streaming regions for music apps (iOS 18.2+)"]}),"\n",(0,r.jsxs)(n.li,{children:["StoreKit entitlements: ",(0,r.jsx)(n.code,{children:"com.apple.developer.storekit.external-purchase*"})]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"android-alternative-billing",children:"Android Alternative Billing"}),"\n",(0,r.jsx)(n.p,{children:"Three new APIs for Google Play Alternative Billing flow:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/docs/api/methods/core-methods#checkalternativebillingavailabilityandroid",children:(0,r.jsx)(n.code,{children:"checkAlternativeBillingAvailabilityAndroid()"})})})," - Check if alternative billing is available for the user"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/docs/api/methods/core-methods#showalternativebillingdialogandroid",children:(0,r.jsx)(n.code,{children:"showAlternativeBillingDialogAndroid()"})})})," - Show Google's required information dialog"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/docs/api/methods/core-methods#createalternativebillingtokenandroid",children:(0,r.jsx)(n.code,{children:"createAlternativeBillingTokenAndroid(sku)"})})})," - Generate reporting token after successful payment"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Configuration Support"}),": ",(0,r.jsx)(n.code,{children:"initConnection()"})," now accepts an optional config parameter:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import {initConnection} from 'expo-iap';\n\n// Initialize with alternative billing mode\nawait initConnection({\n  alternativeBillingModeAndroid: 'user-choice', // or 'alternative-only'\n});\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Two Billing Modes"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"user-choice"})," - Users choose between Google Play billing (30% fee) or your payment system (lower fee)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"alternative-only"})," - Only your payment system is available (Google Play billing disabled)"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"-usage-examples",children:"\ud83d\udcda Usage Examples"}),"\n",(0,r.jsx)(n.h3,{id:"ios-external-purchase",children:"iOS External Purchase"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import {presentExternalPurchaseLinkIOS} from 'expo-iap';\n\n// Redirect user to external purchase website\nconst result = await presentExternalPurchaseLinkIOS(\n  'https://your-site.com/checkout',\n);\n\nif (result.success) {\n  console.log('User redirected to external website');\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"android-alternative-billing-1",children:"Android Alternative Billing"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"User Choice Mode"})," - When using ",(0,r.jsx)(n.code,{children:"user-choice"})," mode, listen for user selection with ",(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/docs/api/methods/listeners#userchoicebillinglistenerandroid",children:(0,r.jsx)(n.code,{children:"userChoiceBillingListenerAndroid()"})})}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import {initConnection, userChoiceBillingListenerAndroid} from 'expo-iap';\n\n// Initialize with user-choice mode\nawait initConnection({\n  alternativeBillingModeAndroid: 'user-choice',\n});\n\n// Listen for when user selects alternative billing\nconst subscription = userChoiceBillingListenerAndroid((details) => {\n  console.log('User selected alternative billing');\n  console.log('Token:', details.externalTransactionToken);\n  console.log('Products:', details.products);\n\n  // Process payment in your system, then report token to Google\n  await processPaymentAndReportToken(details);\n});\n\n// Clean up when done\nsubscription.remove();\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Alternative Only Mode"})," - Manual 3-step flow:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import {\n  checkAlternativeBillingAvailabilityAndroid,\n  showAlternativeBillingDialogAndroid,\n  createAlternativeBillingTokenAndroid,\n} from 'expo-iap';\n\n// Step 1: Check availability\nconst isAvailable = await checkAlternativeBillingAvailabilityAndroid();\n\n// Step 2: Show Google's information dialog\nconst userAccepted = await showAlternativeBillingDialogAndroid();\n\nif (userAccepted) {\n  // Step 3: Process payment in your system, then create token\n  const token = await createAlternativeBillingTokenAndroid(productId);\n\n  // Step 4: Report token to Google Play backend within 24 hours\n  await reportTokenToGooglePlay(token);\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"-example-app",children:"\ud83c\udfa8 Example App"}),"\n",(0,r.jsx)(n.p,{children:"A complete alternative billing demo screen has been added to the example app:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Platform-specific flows"})," - Demonstrates iOS and Android alternative billing patterns"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Billing mode toggle"})," (Android) - Switch between ",(0,r.jsx)(n.code,{children:"alternative-only"})," and ",(0,r.jsx)(n.code,{children:"user-choice"})," with auto-reconnect"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"External URL input"})," (iOS) - Configure and test external purchase links"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Real-time results"})," - View purchase flow status and responses"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Step-by-step guidance"})," - Visual flow diagrams for both platforms"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Navigate to ",(0,r.jsx)(n.code,{children:"example/app/alternative-billing.tsx"})," to explore the implementation."]}),"\n",(0,r.jsx)(n.h2,{id:"-openiap-upgrades",children:"\ud83d\udd27 OpenIAP Upgrades"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"openiap-apple"})," upgraded to ",(0,r.jsx)(n.strong,{children:"1.2.10"})," with StoreKit external purchase support"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"openiap-google"})," upgraded to ",(0,r.jsx)(n.strong,{children:"1.2.12"})," with alternative billing APIs"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"openiap-gql"})," upgraded to ",(0,r.jsx)(n.strong,{children:"1.0.12"})," with updated type definitions"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"-testing",children:"\ud83e\uddea Testing"}),"\n",(0,r.jsx)(n.p,{children:"Added 30+ comprehensive tests for the iOS config plugin:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Info.plist configuration validation"}),"\n",(0,r.jsx)(n.li,{children:"Entitlements setup verification"}),"\n",(0,r.jsx)(n.li,{children:"URL validation and country code checks"}),"\n",(0,r.jsx)(n.li,{children:"Edge case handling"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"All existing tests continue to pass with 98%+ coverage."}),"\n",(0,r.jsx)(n.h2,{id:"\ufe0f-platform-requirements",children:"\u26a0\ufe0f Platform Requirements"}),"\n",(0,r.jsx)(n.h3,{id:"ios",children:"iOS"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Minimum Version"}),": iOS 16.0+ for external purchase links, iOS 18.2+ for notice sheet"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"App Store Connect"}),": Must request and receive approval for external purchase entitlements"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Provisioning Profile"}),": Must include StoreKit external purchase entitlements"]}),"\n",(0,r.jsxs)(n.li,{children:["See ",(0,r.jsx)(n.a,{href:"https://developer.apple.com/documentation/storekit/external-purchase",children:"StoreKit External Purchase documentation"})]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"android",children:"Android"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Google Play Console"}),": Must be approved for alternative billing program"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Token Reporting"}),": Must report tokens to Google within 24 hours"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Backend Integration"}),": Server-side validation and reporting required"]}),"\n",(0,r.jsxs)(n.li,{children:["See ",(0,r.jsx)(n.a,{href:"https://developer.android.com/google/play/billing/alternative",children:"Google Play Alternative Billing documentation"})]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"-installation",children:"\ud83d\udce6 Installation"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"bun add expo-iap@3.1.9\n# or\nnpm install expo-iap@3.1.9\n# or\nyarn add expo-iap@3.1.9\n"})}),"\n",(0,r.jsx)(n.p,{children:"After installation, run prebuild to apply iOS config plugin changes:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npx expo prebuild --clean\n"})}),"\n",(0,r.jsx)(n.h2,{id:"-important-notes",children:"\ud83d\udea8 Important Notes"}),"\n",(0,r.jsx)(n.h3,{id:"for-ios-developers",children:"For iOS Developers"}),"\n",(0,r.jsx)(n.p,{children:"Alternative billing on iOS requires explicit approval from Apple. During development:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Keep ",(0,r.jsx)(n.code,{children:"iosAlternativeBilling"})," commented out in your config"]}),"\n",(0,r.jsx)(n.li,{children:"Test regular IAP flows without entitlements"}),"\n",(0,r.jsx)(n.li,{children:"When ready for production, uncomment the config and follow Apple's approval process"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"for-android-developers",children:"For Android Developers"}),"\n",(0,r.jsx)(n.p,{children:"Alternative billing on Android requires:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Approval from Google Play Console"}),"\n",(0,r.jsx)(n.li,{children:"Backend integration to report tokens within 24 hours"}),"\n",(0,r.jsx)(n.li,{children:"Proper error handling for users not eligible for alternative billing"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"No Breaking Changes"}),": All changes are additive. Existing apps will continue to work without modifications."]}),"\n",(0,r.jsx)(n.h2,{id:"-references",children:"\ud83d\udd17 References"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://openiap.dev",children:"OpenIAP Documentation"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://developer.apple.com/documentation/storekit/external-purchase",children:"StoreKit External Purchase"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://developer.android.com/google/play/billing/alternative",children:"Google Play Alternative Billing"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/hyochan/expo-iap/blob/main/example/app/alternative-billing.tsx",children:"Example Implementation"})}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Questions or issues? Let us know via ",(0,r.jsx)(n.a,{href:"https://github.com/hyochan/expo-iap/issues",children:"GitHub issues"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>o});var l=i(6540);const r={},t=l.createContext(r);function s(e){const n=l.useContext(t);return l.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),l.createElement(t.Provider,{value:n},e.children)}}}]);