"use strict";(globalThis.webpackChunkexpo_iap_docs=globalThis.webpackChunkexpo_iap_docs||[]).push([[4776],{571:(e,n,s)=>{s.d(n,{A:()=>a});var i=s(6540),r=s(4848);function o({className:e="adfit",style:n,unit:s,height:o,width:a}){return(0,i.useEffect)(()=>{const n=setTimeout(()=>{const n=document.querySelector(`.${e}`);if(!n)return void console.warn(`AdFit: Element with class "${e}" not found`);const i=n.querySelectorAll(".kakao_ad_area"),r=n.querySelectorAll('script[src*="kas/static/ba.min.js"]');i.forEach(e=>e.remove()),r.forEach(e=>e.remove());const t=document.createElement("ins"),l=document.createElement("script");t.className="kakao_ad_area",t.style.cssText="display:none; width:100%;",l.async=!0,l.type="text/javascript",l.src="//t1.daumcdn.net/kas/static/ba.min.js",t.setAttribute("data-ad-width",a.toString()),t.setAttribute("data-ad-height",o.toString()),t.setAttribute("data-ad-unit",s),n.appendChild(t),n.appendChild(l)},100);return()=>clearTimeout(n)},[e,s,o,a]),(0,r.jsx)("div",{style:n,children:(0,r.jsx)("div",{className:e})})}function a(){return(0,r.jsx)(o,{unit:"DAN-YTmjDwlbcP42HBg6",height:100,width:320,className:"adfit-top",style:{flex:1,marginTop:24,marginBottom:24}})}},7002:e=>{e.exports=JSON.parse('{"permalink":"/expo-iap/blog/3.0.0","editUrl":"https://github.com/hyochan/expo-iap/tree/main/docs/blog/2025-09-13-3.0.0.md","source":"@site/blog/2025-09-13-3.0.0.md","title":"3.0.0 \u2014 OpenIAP Integration, Unified Core, Leaner API","description":"Expo IAP 3.0.0 is a major release that fully integrates OpenIAP\u2019s Android and iOS modules. Expo IAP is no longer just a framework bridge \u2014 it now leverages a centralized OpenIAP core for shared logic across platforms and SDKs. The result is a leaner, more maintainable codebase with faster iteration and greater stability.","date":"2025-09-13T00:00:00.000Z","tags":[{"inline":false,"label":"Release","permalink":"/expo-iap/blog/tags/release","description":"New version releases and updates"},{"inline":false,"label":"Breaking Change","permalink":"/expo-iap/blog/tags/breaking-change","description":"Breaking changes requiring code updates"},{"inline":false,"label":"Android","permalink":"/expo-iap/blog/tags/android","description":"Android platform specific features"},{"inline":false,"label":"iOS","permalink":"/expo-iap/blog/tags/ios","description":"iOS platform specific features"}],"readingTime":4.26,"hasTruncateMarker":true,"authors":[{"name":"Hyo","title":"Expo IAP Maintainer","url":"https://github.com/hyochan","page":{"permalink":"/expo-iap/blog/authors/hyochan"},"socials":{"github":"https://github.com/hyochan","linkedin":"https://www.linkedin.com/in/hyochanjang/","x":"https://x.com/hyodotdev"},"imageURL":"https://github.com/hyochan.png","key":"hyochan"}],"frontMatter":{"slug":"3.0.0","title":"3.0.0 \u2014 OpenIAP Integration, Unified Core, Leaner API","tags":["release","breaking-change","android","ios"],"authors":["hyochan"],"date":"2025-09-13T00:00:00.000Z"},"unlisted":false,"prevItem":{"title":"3.1.0 - Full OpenIAP Ecosystem Adoption","permalink":"/expo-iap/blog/3.1.0"},"nextItem":{"title":"2.9.0 - OpenIAP Apple Integration","permalink":"/expo-iap/blog/2.9.0"}}')},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>t});var i=s(6540);const r={},o=i.createContext(r);function a(e){const n=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(o.Provider,{value:n},e.children)}},8760:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>p,frontMatter:()=>t,metadata:()=>i,toc:()=>c});var i=s(7002),r=s(4848),o=s(8453),a=s(571);const t={slug:"3.0.0",title:"3.0.0 \u2014 OpenIAP Integration, Unified Core, Leaner API",tags:["release","breaking-change","android","ios"],authors:["hyochan"],date:new Date("2025-09-13T00:00:00.000Z")},l=void 0,d={authorsImageUrls:[void 0]},c=[{value:"\ud83d\ude80 Highlights",id:"-highlights",level:2},{value:"\ud83d\udd0d Key Changes",id:"-key-changes",level:2},{value:"\ud83d\udca5 Breaking Changes",id:"-breaking-changes",level:2},{value:"\ud83d\udccb Recent Patch Releases (v2.9.x)",id:"-recent-patch-releases-v29x",level:2},{value:"v2.9.7 \u2014 Android/iOS improvements and subscription offer tokens",id:"v297--androidios-improvements-and-subscription-offer-tokens",level:3},{value:"v2.9.6 \u2014 Metro bundling fix",id:"v296--metro-bundling-fix",level:3},{value:"v2.9.5 \u2014 Pin openiap and deprecate 2.9.0\u20132.9.4",id:"v295--pin-openiap-and-deprecate-290294",level:3},{value:"v2.9.3 \u2014 iOS error fixes and CocoaPods hardening",id:"v293--ios-error-fixes-and-cocoapods-hardening",level:3},{value:"v2.9.1 \u2014 iOS fixes and error improvements",id:"v291--ios-fixes-and-error-improvements",level:3},{value:"Quick Migration",id:"quick-migration",level:2},{value:"Fetch products (in\u2011app or subs)",id:"fetch-products-inapp-or-subs",level:3},{value:"Request purchase (products or subs)",id:"request-purchase-products-or-subs",level:3},{value:"Restore/available purchases",id:"restoreavailable-purchases",level:3},{value:"Tokens and finishing transactions",id:"tokens-and-finishing-transactions",level:3},{value:"Notes",id:"notes",level:2},{value:"Changelog",id:"changelog",level:2},{value:"\ud83d\udd17 Repositories to Explore",id:"-repositories-to-explore",level:2},{value:"\ud83c\udf1f Why This Matters",id:"-why-this-matters",level:2}];function h(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["Expo IAP 3.0.0 is a major release that fully integrates ",(0,r.jsx)(n.a,{href:"https://openiap.dev",children:"OpenIAP"}),"\u2019s Android and iOS modules. Expo IAP is no longer just a framework bridge \u2014 it now leverages a centralized ",(0,r.jsx)(n.a,{href:"https://openiap.dev",children:"OpenIAP"})," core for shared logic across platforms and SDKs. The result is a leaner, more maintainable codebase with faster iteration and greater stability."]}),"\n","\n",(0,r.jsx)(a.A,{}),"\n",(0,r.jsx)(n.h2,{id:"-highlights",children:"\ud83d\ude80 Highlights"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Unified tokens: ",(0,r.jsx)(n.code,{children:"Purchase.purchaseToken"})," is now the single source on both platforms (iOS JWS or Android token). The old ",(0,r.jsx)(n.code,{children:"jwsRepresentationIOS"})," is removed."]}),"\n",(0,r.jsxs)(n.li,{children:["Leaner API: Legacy helpers are removed. Use ",(0,r.jsx)(n.code,{children:"fetchProducts"}),", ",(0,r.jsx)(n.code,{children:"requestPurchase"}),", ",(0,r.jsx)(n.code,{children:"getAvailablePurchases"}),", and listeners."]}),"\n",(0,r.jsxs)(n.li,{children:["iOS parity: Only ",(0,r.jsx)(n.code,{children:"*IOS"})," helpers remain for iOS\u2011specific behavior. ",(0,r.jsx)(n.code,{children:"showManageSubscriptionsIOS()"})," now returns an array of purchases instead of a boolean."]}),"\n",(0,r.jsx)(n.li,{children:"Stronger types: Consolidated product/purchase types; removed legacy aliases and fields for clarity."}),"\n",(0,r.jsx)(n.li,{children:"OpenIAP everywhere: Android uses openiap-google and iOS uses openiap-apple. Shared, centralized logic simplifies maintenance and keeps frameworks in sync."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"-key-changes",children:"\ud83d\udd0d Key Changes"}),"\n",(0,r.jsx)(n.p,{children:"\u2705 Full Integration Across Client Platforms (Android \xb7 iOS) Platform\u2011specific IAP logic has been unified into OpenIAP modules, minimizing fragmentation across ecosystems."}),"\n",(0,r.jsx)(n.p,{children:"\u2705 Lean Codebase (~75% reduction) Overall code size has been significantly reduced, lowering complexity and maintenance costs."}),"\n",(0,r.jsx)(n.p,{children:"\u2705 Centralized Core Architecture Common logic lives in the core library, enabling consistent behavior and faster feature expansion across frameworks."}),"\n",(0,r.jsx)(n.p,{children:"\u2705 Improved Stability & Maintainability Bug fixes and features land once in the core, eliminating duplication and improving reliability."}),"\n",(0,r.jsx)(n.h2,{id:"-breaking-changes",children:"\ud83d\udca5 Breaking Changes"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Removed fields"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Removed ",(0,r.jsx)(n.code,{children:"transactionReceipt"})," (use ",(0,r.jsx)(n.code,{children:"purchaseToken"})," on all platforms). On iOS, ",(0,r.jsx)(n.code,{children:"purchaseToken"})," contains the JWS representation previously accessed via receipts."]}),"\n",(0,r.jsxs)(n.li,{children:["Removed ",(0,r.jsx)(n.code,{children:"jwsRepresentationIOS"})," in favor of the unified ",(0,r.jsx)(n.code,{children:"purchaseToken"}),"."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Removed functions"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"getProducts"}),", ",(0,r.jsx)(n.code,{children:"getSubscriptions"}),", ",(0,r.jsx)(n.code,{children:"requestProducts"}),", ",(0,r.jsx)(n.code,{children:"requestSubscription"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"getPurchaseHistory"})," / ",(0,r.jsx)(n.code,{children:"getPurchaseHistories"})]}),"\n",(0,r.jsxs)(n.li,{children:["Non\u2011suffixed iOS aliases (use ",(0,r.jsx)(n.code,{children:"*IOS"})," variants)"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Changed behavior"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"showManageSubscriptionsIOS(): Promise<Purchase[]>"})," \u2014 now returns purchases instead of ",(0,r.jsx)(n.code,{children:"boolean"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"getAvailablePurchases"})," options: only accepts ",(0,r.jsx)(n.code,{children:"alsoPublishToEventListenerIOS"})," and ",(0,r.jsx)(n.code,{children:"onlyIncludeActiveItemsIOS"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"-recent-patch-releases-v29x",children:"\ud83d\udccb Recent Patch Releases (v2.9.x)"}),"\n",(0,r.jsx)(n.p,{children:"Before the major 3.0.0 release, several patch versions improved stability and fixed issues:"}),"\n",(0,r.jsx)(n.h3,{id:"v297--androidios-improvements-and-subscription-offer-tokens",children:"v2.9.7 \u2014 Android/iOS improvements and subscription offer tokens"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Android: Removed ensureConnection wrapper, added pre-checks, and dropped deprecated product fields (use ",(0,r.jsx)(n.code,{children:"nameAndroid"}),", ",(0,r.jsx)(n.code,{children:"oneTimePurchaseOfferDetailsAndroid"}),", ",(0,r.jsx)(n.code,{children:"subscriptionOfferDetailsAndroid"}),")."]}),"\n",(0,r.jsx)(n.li,{children:"iOS: Added ensureConnection() guard across public APIs; fixed main-actor state mutation and minor warnings."}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Heads-up for Android subscriptions"}),": When purchasing subscriptions, pass selected offer tokens via ",(0,r.jsx)(n.code,{children:"subscriptionOffers"})," to build BillingFlowParams correctly. Example provided in the original release notes."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"v296--metro-bundling-fix",children:"v2.9.6 \u2014 Metro bundling fix"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Fixed Metro bundling issue that could crash apps when using ",(0,r.jsx)(n.code,{children:"useIAP()"})," under certain project setups."]}),"\n",(0,r.jsx)(n.li,{children:"Replaced ambiguous import '.' with explicit import './index' in the hook implementation."}),"\n",(0,r.jsx)(n.li,{children:"No runtime behavior changes \u2014 strictly fixes bundling resolution."}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"v295--pin-openiap-and-deprecate-290294",children:"v2.9.5 \u2014 Pin openiap and deprecate 2.9.0\u20132.9.4"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"iOS: Podspec now pins openiap to 1.1.9 to avoid version drift during pod install."}),"\n",(0,r.jsx)(n.li,{children:"Deprecated 2.9.0\u20132.9.4. Please upgrade to 2.9.5."}),"\n",(0,r.jsxs)(n.li,{children:["Upgrade notes: Run ",(0,r.jsx)(n.code,{children:"npx expo prebuild -p ios"})," and ",(0,r.jsx)(n.code,{children:"pod install"})," after updating."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"v293--ios-error-fixes-and-cocoapods-hardening",children:"v2.9.3 \u2014 iOS error fixes and CocoaPods hardening"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"iOS: Replaced thrown OpenIapError.* usages and nonexistent event types with proper OpenIapFailure cases."}),"\n",(0,r.jsx)(n.li,{children:"iOS: Relied on type inference for error event listener to avoid missing type symbols."}),"\n",(0,r.jsx)(n.li,{children:"Plugin(iOS): Ensured Podfile includes GitHub Specs before CDN and added stability envs to reduce CDN HTTP/2 flakiness."}),"\n",(0,r.jsx)(n.li,{children:"Plugin(iOS): Applied the same improvements when injecting a local openiap pod for development."}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"v291--ios-fixes-and-error-improvements",children:"v2.9.1 \u2014 iOS fixes and error improvements"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["iOS: ",(0,r.jsx)(n.code,{children:"getPromotedProductIOS"})," now returns a full serialized Product; ",(0,r.jsx)(n.code,{children:"subscriptionStatusIOS"})," returns ",(0,r.jsx)(n.code,{children:"{ state, renewalInfo? }"})," with a real boolean ",(0,r.jsx)(n.code,{children:"willAutoRenew"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Errors: Expanded codes + friendlier messages; support object-style ",(0,r.jsx)(n.code,{children:"new PurchaseError({ ... })"})," (positional args still work)."]}),"\n",(0,r.jsx)(n.li,{children:"Docs: Docusaurus supports GitHub Pages via dynamic baseUrl; added conventions for PurchaseError construction."}),"\n",(0,r.jsx)(n.li,{children:"Example iOS: Pinned openiap to 1.1.7 from git to avoid trunk lag."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"quick-migration",children:"Quick Migration"}),"\n",(0,r.jsx)(n.h3,{id:"fetch-products-inapp-or-subs",children:"Fetch products (in\u2011app or subs)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"import {fetchProducts, type ProductSubscription} from 'expo-iap';\n\nconst inapps = await fetchProducts({skus: ['prod1', 'prod2'], type: 'in-app'});\n\nconst subs = (await fetchProducts({\n  skus: ['sub_monthly'],\n  type: 'subs',\n})) as ProductSubscription[];\n"})}),"\n",(0,r.jsx)(n.h3,{id:"request-purchase-products-or-subs",children:"Request purchase (products or subs)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"import {requestPurchase} from 'expo-iap';\n\n// In\u2011app\nawait requestPurchase({\n  request: {ios: {sku: 'prod1'}, android: {skus: ['prod1']}},\n  type: 'in-app',\n});\n\n// Subscriptions (Android supply offer tokens)\nawait requestPurchase({\n  request: {\n    ios: {sku: 'sub_monthly'},\n    android: {\n      skus: ['sub_monthly'],\n      subscriptionOffers: [\n        {sku: 'sub_monthly', offerToken: 'your-offer-token'},\n      ],\n    },\n  },\n  type: 'subs',\n});\n"})}),"\n",(0,r.jsx)(n.h3,{id:"restoreavailable-purchases",children:"Restore/available purchases"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"import {getAvailablePurchases, restorePurchases} from 'expo-iap';\n\n// iOS\u2011specific flags only\nconst purchases = await getAvailablePurchases({\n  alsoPublishToEventListenerIOS: false,\n  onlyIncludeActiveItemsIOS: true,\n});\n\n// Cross\u2011platform helper that syncs on iOS then lists\nconst restored = await restorePurchases({\n  alsoPublishToEventListenerIOS: false,\n  onlyIncludeActiveItemsIOS: true,\n});\n"})}),"\n",(0,r.jsx)(n.h3,{id:"tokens-and-finishing-transactions",children:"Tokens and finishing transactions"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"import {finishTransaction, type Purchase} from 'expo-iap';\n\nfunction getToken(p: Purchase) {\n  return p.purchaseToken; // iOS: JWS, Android: purchaseToken\n}\n\nawait finishTransaction({purchase: somePurchase, isConsumable: true});\n"})}),"\n",(0,r.jsx)(n.h2,{id:"notes",children:"Notes"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["iOS promoted products listener remains ",(0,r.jsx)(n.code,{children:"promotedProductListenerIOS"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"getStorefront()"})," is now the unified storefront helper across platforms."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"changelog",children:"Changelog"}),"\n",(0,r.jsxs)(n.p,{children:["See ",(0,r.jsx)(n.code,{children:"CHANGELOG.md"})," for the full list of changes in 3.0.0."]}),"\n",(0,r.jsx)(n.h2,{id:"-repositories-to-explore",children:"\ud83d\udd17 Repositories to Explore"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/hyodotdev/openiap-apple",children:"openiap-apple"})," (iOS)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/hyodotdev/openiap-google",children:"openiap-google"})," (Android)"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"The OpenIAP core library is where the shared logic and architecture live \u2014 the foundation for review, extensibility, and cross\u2011SDK consistency."}),"\n",(0,r.jsx)(n.h2,{id:"-why-this-matters",children:"\ud83c\udf1f Why This Matters"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Standardizes the IAP experience across frameworks, improving trust for both developers and users"}),"\n",(0,r.jsx)(n.li,{children:"Speeds up responses to platform\u2011specific issues (fix once at the core)"}),"\n",(0,r.jsx)(n.li,{children:"Reduces risk and shortens release cycles via a smaller codebase and broader test coverage"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Follow for faster updates: ",(0,r.jsx)(n.a,{href:"https://x.com/hyodotdev",children:"@hyodotdev"})]})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}}}]);