"use strict";(globalThis.webpackChunkexpo_iap_docs=globalThis.webpackChunkexpo_iap_docs||[]).push([[363],{571:(e,n,i)=>{i.d(n,{A:()=>o});var t=i(6540),r=i(4848);function l({className:e="adfit",style:n,unit:i,height:l,width:o}){return(0,t.useEffect)(()=>{const n=setTimeout(()=>{const n=document.querySelector(`.${e}`);if(!n)return void console.warn(`AdFit: Element with class "${e}" not found`);const t=n.querySelectorAll(".kakao_ad_area"),r=n.querySelectorAll('script[src*="kas/static/ba.min.js"]');t.forEach(e=>e.remove()),r.forEach(e=>e.remove());const a=document.createElement("ins"),s=document.createElement("script");a.className="kakao_ad_area",a.style.cssText="display:none; width:100%;",s.async=!0,s.type="text/javascript",s.src="//t1.daumcdn.net/kas/static/ba.min.js",a.setAttribute("data-ad-width",o.toString()),a.setAttribute("data-ad-height",l.toString()),a.setAttribute("data-ad-unit",i),n.appendChild(a),n.appendChild(s)},100);return()=>clearTimeout(n)},[e,i,l,o]),(0,r.jsx)("div",{style:n,children:(0,r.jsx)("div",{className:e})})}function o(){return(0,r.jsx)(l,{unit:"DAN-YTmjDwlbcP42HBg6",height:100,width:320,className:"adfit-top",style:{flex:1,marginTop:24,marginBottom:24}})}},7557:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"examples/alternative-billing","title":"Alternative Billing Example","description":"Use alternative billing to redirect users to external payment systems or offer payment choices alongside platform billing.","source":"@site/docs/examples/alternative-billing.md","sourceDirName":"examples","slug":"/examples/alternative-billing","permalink":"/expo-iap/docs/examples/alternative-billing","draft":false,"unlisted":false,"editUrl":"https://github.com/hyochan/expo-iap/tree/main/docs/docs/examples/alternative-billing.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"title":"Alternative Billing Example","sidebar_label":"Alternative Billing","sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"Offer Code","permalink":"/expo-iap/docs/examples/offer-code"},"next":{"title":"Sponsors","permalink":"/expo-iap/docs/sponsors"}}');var r=i(4848),l=i(8453),o=i(571);const a={title:"Alternative Billing Example",sidebar_label:"Alternative Billing",sidebar_position:5},s="Alternative Billing",c={},d=[{value:"iOS - External Purchase URL",id:"ios---external-purchase-url",level:2},{value:"Important Notes",id:"important-notes",level:3},{value:"Android - Alternative Billing Only",id:"android---alternative-billing-only",level:2},{value:"Flow Steps",id:"flow-steps",level:3},{value:"Android - User Choice Billing",id:"android---user-choice-billing",level:2},{value:"Selection Dialog",id:"selection-dialog",level:3},{value:"Complete Cross-Platform Example",id:"complete-cross-platform-example",level:2},{value:"Configuration",id:"configuration",level:2},{value:"useIAP Hook",id:"useiap-hook",level:3},{value:"Root API",id:"root-api",level:3},{value:"Testing",id:"testing",level:2},{value:"iOS",id:"ios",level:3},{value:"Android",id:"android",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"See Also",id:"see-also",level:2}];function u(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"alternative-billing",children:"Alternative Billing"})}),"\n",(0,r.jsx)(o.A,{}),"\n",(0,r.jsx)(n.p,{children:"Use alternative billing to redirect users to external payment systems or offer payment choices alongside platform billing."}),"\n",(0,r.jsx)(n.p,{children:"View the full example source:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["GitHub: ",(0,r.jsx)(n.a,{href:"https://github.com/hyochan/expo-iap/blob/main/example/app/alternative-billing.tsx",children:"alternative-billing.tsx"})]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"ios---external-purchase-url",children:"iOS - External Purchase URL"}),"\n",(0,r.jsx)(n.p,{children:"Redirect users to an external website for payment (iOS 16.0+):"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"import {Platform, Button, Alert} from 'react-native';\nimport {requestPurchase, type Product} from 'expo-iap';\n\nfunction IOSAlternativeBilling({product}: {product: Product}) {\n  const handlePurchase = async () => {\n    if (Platform.OS !== 'ios') return;\n\n    try {\n      await requestPurchase({\n        request: {\n          ios: {\n            sku: product.id,\n            quantity: 1,\n          },\n        },\n        type: 'in-app',\n        useAlternativeBilling: true,\n      });\n\n      Alert.alert(\n        'Redirected',\n        'Complete purchase on the external website. You will be redirected back to the app.',\n      );\n    } catch (error: any) {\n      if (error.code !== 'user-cancelled') {\n        Alert.alert('Error', error.message);\n      }\n    }\n  };\n\n  return <Button title=\"Buy (External URL)\" onPress={handlePurchase} />;\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"important-notes",children:"Important Notes"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"iOS 16.0+ Required"}),": External URLs only work on iOS 16.0 and later"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Configuration Required"}),": External URLs must be configured in ",(0,r.jsx)(n.code,{children:"app.config.ts"})," (see ",(0,r.jsx)(n.a,{href:"/docs/guides/alternative-billing",children:"Alternative Billing Guide"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"No Callback"}),": ",(0,r.jsx)(n.code,{children:"onPurchaseUpdated"})," will NOT fire when using external URLs"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Deep Linking"}),": Implement deep linking to return users to your app"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"android---alternative-billing-only",children:"Android - Alternative Billing Only"}),"\n",(0,r.jsx)(n.p,{children:"Manual 3-step flow for alternative billing only:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"import {Platform, Button, Alert} from 'react-native';\nimport {\n  checkAlternativeBillingAvailabilityAndroid,\n  showAlternativeBillingDialogAndroid,\n  createAlternativeBillingTokenAndroid,\n  type Product,\n} from 'expo-iap';\n\nfunction AndroidAlternativeBillingOnly({product}: {product: Product}) {\n  const handlePurchase = async () => {\n    if (Platform.OS !== 'android') return;\n\n    try {\n      // Step 1: Check availability\n      const isAvailable = await checkAlternativeBillingAvailabilityAndroid();\n      if (!isAvailable) {\n        Alert.alert('Error', 'Alternative billing not available');\n        return;\n      }\n\n      // Step 2: Show information dialog\n      const userAccepted = await showAlternativeBillingDialogAndroid();\n      if (!userAccepted) {\n        console.log('User declined');\n        return;\n      }\n\n      // Step 2.5: Process payment with your payment system\n      // ... your payment processing logic here ...\n      console.log('Processing payment...');\n\n      // Step 3: Create reporting token (after successful payment)\n      const token = await createAlternativeBillingTokenAndroid(product.id);\n      console.log('Token created:', token);\n\n      // Step 4: Report token to Google Play backend within 24 hours\n      // await reportToGoogleBackend(token);\n\n      Alert.alert('Success', 'Alternative billing completed (DEMO)');\n    } catch (error: any) {\n      Alert.alert('Error', error.message);\n    }\n  };\n\n  return <Button title=\"Buy (Alternative Only)\" onPress={handlePurchase} />;\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"flow-steps",children:"Flow Steps"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Check availability"})," - Verify alternative billing is enabled"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Show info dialog"})," - Display Google's information dialog"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Process payment"})," - Handle payment with your system"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Create token"})," - Generate reporting token"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Report to Google"})," - Send token to Google within 24 hours"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"android---user-choice-billing",children:"Android - User Choice Billing"}),"\n",(0,r.jsx)(n.p,{children:"Let users choose between Google Play and alternative billing:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"import {Platform, Button} from 'react-native';\nimport {useIAP, requestPurchase, type Product} from 'expo-iap';\n\nfunction AndroidUserChoiceBilling({product}: {product: Product}) {\n  // Initialize with user choice mode\n  const {connected} = useIAP({\n    alternativeBillingModeAndroid: 'user-choice',\n    onPurchaseSuccess: (purchase) => {\n      // Fires if user selects Google Play\n      console.log('Google Play purchase:', purchase);\n    },\n  });\n\n  const handlePurchase = async () => {\n    if (Platform.OS !== 'android' || !connected) return;\n\n    try {\n      // Google will show selection dialog automatically\n      await requestPurchase({\n        request: {\n          android: {\n            skus: [product.id],\n          },\n        },\n        type: 'in-app',\n        useAlternativeBilling: true,\n      });\n\n      // If user selects Google Play: onPurchaseSuccess fires\n      // If user selects alternative: manual flow required\n    } catch (error: any) {\n      console.error('Purchase error:', error);\n    }\n  };\n\n  return <Button title=\"Buy (User Choice)\" onPress={handlePurchase} />;\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"selection-dialog",children:"Selection Dialog"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Google shows automatic selection dialog"}),"\n",(0,r.jsx)(n.li,{children:"User chooses: Google Play (30% fee) or Alternative (lower fee)"}),"\n",(0,r.jsx)(n.li,{children:"Different callbacks based on user choice"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"complete-cross-platform-example",children:"Complete Cross-Platform Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"import {useState, useCallback} from 'react';\nimport {Platform, View, Button, Alert} from 'react-native';\nimport {\n  useIAP,\n  requestPurchase,\n  checkAlternativeBillingAvailabilityAndroid,\n  showAlternativeBillingDialogAndroid,\n  createAlternativeBillingTokenAndroid,\n  type Product,\n  type AlternativeBillingModeAndroid,\n} from 'expo-iap';\n\nfunction AlternativeBillingScreen() {\n  const [billingMode, setBillingMode] =\n    useState<AlternativeBillingModeAndroid>('alternative-only');\n\n  const {connected, products, fetchProducts} = useIAP({\n    alternativeBillingModeAndroid:\n      Platform.OS === 'android' ? billingMode : undefined,\n    onPurchaseSuccess: (purchase) => {\n      console.log('Purchase successful:', purchase);\n    },\n    onPurchaseError: (error) => {\n      console.error('Purchase error:', error);\n    },\n  });\n\n  const handleIOSPurchase = useCallback(async (product: Product) => {\n    await requestPurchase({\n      request: {\n        ios: {\n          sku: product.id,\n          quantity: 1,\n        },\n      },\n      type: 'in-app',\n      useAlternativeBilling: true,\n    });\n\n    Alert.alert('Redirected', 'Complete purchase on external website');\n  }, []);\n\n  const handleAndroidAlternativeOnly = useCallback(async (product: Product) => {\n    const isAvailable = await checkAlternativeBillingAvailabilityAndroid();\n    if (!isAvailable) {\n      Alert.alert('Error', 'Alternative billing not available');\n      return;\n    }\n\n    const userAccepted = await showAlternativeBillingDialogAndroid();\n    if (!userAccepted) return;\n\n    // Process payment...\n    const token = await createAlternativeBillingTokenAndroid(product.id);\n    Alert.alert('Success', `Token created: ${token?.substring(0, 20)}...`);\n  }, []);\n\n  const handleAndroidUserChoice = useCallback(async (product: Product) => {\n    await requestPurchase({\n      request: {\n        android: {\n          skus: [product.id],\n        },\n      },\n      type: 'in-app',\n      useAlternativeBilling: true,\n    });\n  }, []);\n\n  const handlePurchase = (product: Product) => {\n    if (Platform.OS === 'ios') {\n      handleIOSPurchase(product);\n    } else if (Platform.OS === 'android') {\n      if (billingMode === 'alternative-only') {\n        handleAndroidAlternativeOnly(product);\n      } else {\n        handleAndroidUserChoice(product);\n      }\n    }\n  };\n\n  return (\n    <View>\n      {/* Android: Mode selector */}\n      {Platform.OS === 'android' && (\n        <Button\n          title={`Mode: ${billingMode}`}\n          onPress={() =>\n            setBillingMode(\n              billingMode === 'alternative-only'\n                ? 'user-choice'\n                : 'alternative-only',\n            )\n          }\n        />\n      )}\n\n      {/* Products list */}\n      {products.map((product) => (\n        <Button\n          key={product.id}\n          title={`Buy ${product.title}`}\n          onPress={() => handlePurchase(product)}\n        />\n      ))}\n    </View>\n  );\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,r.jsx)(n.h3,{id:"useiap-hook",children:"useIAP Hook"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"const {connected} = useIAP({\n  alternativeBillingModeAndroid: 'alternative-only', // or 'user-choice' or 'none'\n});\n"})}),"\n",(0,r.jsx)(n.h3,{id:"root-api",children:"Root API"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"import {initConnection} from 'expo-iap';\n\nawait initConnection({\n  alternativeBillingModeAndroid: 'alternative-only',\n});\n"})}),"\n",(0,r.jsx)(n.h2,{id:"testing",children:"Testing"}),"\n",(0,r.jsx)(n.h3,{id:"ios",children:"iOS"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Test on iOS 16.0+ devices"}),"\n",(0,r.jsx)(n.li,{children:"Verify external URL opens in Safari"}),"\n",(0,r.jsx)(n.li,{children:"Test deep link return flow"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"android",children:"Android"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Configure alternative billing in Google Play Console"}),"\n",(0,r.jsx)(n.li,{children:"Test both modes separately"}),"\n",(0,r.jsx)(n.li,{children:"Verify token generation"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Backend Validation"})," - Always validate on server"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Clear UI"})," - Show users they're leaving the app"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Error Handling"})," - Handle all error cases"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Token Reporting"})," - Report within 24 hours (Android)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Deep Linking"})," - Essential for iOS return flow"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"see-also",children:"See Also"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/docs/guides/alternative-billing",children:"Alternative Billing Guide"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/docs/guides/error-handling",children:"Error Handling"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/docs/examples/purchase-flow",children:"Purchase Flow"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>a});var t=i(6540);const r={},l=t.createContext(r);function o(e){const n=t.useContext(l);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(l.Provider,{value:n},e.children)}}}]);